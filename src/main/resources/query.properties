queryToGetAllStudents = select * from students_information
queryToGetStudentByStudentId = select * from students_information where student_id = :studentId
queryToGetStudentByEmailId = select * from students_information where email = :email
queryToGetStudentByContactNo = select * from students_information where contact_no = :contactNo;
queryToInsertStudents=insert into students_information (first_name,last_name,address,contact_no,email,year_code)   values(:firstName,:lastName,:address,:contactNo,:email,:yearCode)
queryToInsertCourses= insert into courses (course_description,course_credit,course_type) values(:courseDescription,:courseCredit,:courseType)
queryToGetAllCourses = select * from courses;
querytogetcoursesbycourseid = select * from courses where course_id = :courseId;
queryToGetCoursesByCourseCredit = select * from courses where course_credit =  :courseCredit;
queryToCreateStudents=create table IF NOT EXISTS students_information ( student_id serial primary key, first_name varchar(255) not null,last_name varchar(255) not null,address varchar(255) not null, contact_no bigint not null unique, email      varchar(255) not null unique, year_code varchar(255) not null )
queryToCreateEnrollments=create table IF NOT EXISTS enrollment ( enrollment_id   serial primary key, student_id      bigint constraint fk_students_information references students_information on delete cascade, course_id       bigint constraint fk_courses references courses on delete cascade, enrollment_date date    default now(), is_active       boolean default true )
quertToCreateCourses=create table IF NOT EXISTS courses ( course_id          serial primary key, course_description varchar(255), course_credit      bigint, course_type        varchar(255) )